---
// VideoCard.astro - Reusable video card component
interface Props {
  video: {
    id: string;
    title: string;
    description: string;
    thumbnail: string;
    featured?: boolean;
    category?: string;
    uploadDate?: string;
  };
  compact?: boolean;
}

const { video, compact = false } = Astro.props;
---

<div class="group relative rounded-lg overflow-hidden shadow-md aspect-video cursor-pointer" data-video-category={video.category || ''}>
  <!-- Thumbnail with play button overlay -->
  <div class="absolute inset-0 bg-gray-900">
    <img 
      src={video.thumbnail} 
      alt={`${video.title} Thumbnail`} 
      class="w-full h-full object-cover opacity-80 transition-all duration-500 group-hover:opacity-60 group-hover:scale-110"
    />
    <div class="absolute inset-0 flex items-center justify-center">
      <div class="video-play-button w-10 h-10 md:w-14 md:h-14 bg-premier-purple bg-opacity-80 rounded-full flex items-center justify-center transition-all duration-300 group-hover:scale-110" data-video-id={video.id}>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 md:h-7 md:w-7 text-white" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd" />
        </svg>
      </div>
    </div>
  </div>
  
  <!-- Video Title Overlay -->
  <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-2 md:p-4">
    <h3 class="text-white font-medium text-sm md:text-base">{video.title}</h3>
    {!compact && <p class="text-gray-200 text-xs md:text-sm hidden md:block">{video.description}</p>}
    <div class="flex items-center mt-1">
      {video.category && (
        <span class="text-xs bg-premier-purple bg-opacity-70 text-white px-2 py-0.5 rounded-full">
          {video.category.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}
        </span>
      )}
      {video.uploadDate && (
        <span class="text-xs text-gray-300 ml-2">
          {new Date(video.uploadDate).toLocaleDateString('en-US', {year: 'numeric', month: 'short'})}
        </span>
      )}
    </div>
  </div>
</div> 