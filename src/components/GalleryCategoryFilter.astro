---
// GalleryCategoryFilter.astro - Filter buttons for gallery categories
interface Props {
  categories: string[];
  activeCategory?: string;
}

// Format category name for display (capitalize, replace dashes with spaces)
function formatCategoryName(category: string): string {
  return category
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
}

const { categories, activeCategory = '' } = Astro.props;
---

<div class="flex flex-wrap justify-center gap-2 mb-8">
  <button 
    class={`px-4 py-2 rounded-full text-sm md:text-base transition-all duration-300 ${activeCategory === '' 
      ? 'bg-premier-purple text-white' 
      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`}
    data-gallery-category=""
  >
    All Images
  </button>
  
  {categories.map(category => (
    <button 
      class={`px-4 py-2 rounded-full text-sm md:text-base transition-all duration-300 ${activeCategory === category 
        ? 'bg-premier-purple text-white' 
        : 'bg-gray-100 text-gray-600 hover:bg-gray-200'}`}
      data-gallery-category={category}
    >
      {formatCategoryName(category)}
    </button>
  ))}
</div>

<script>
  // Add event listeners to gallery category buttons
  document.addEventListener('DOMContentLoaded', () => {
    const categoryButtons = document.querySelectorAll('[data-gallery-category]');
    
    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-gallery-category') || '';
        
        // Update active button styles
        categoryButtons.forEach(btn => {
          if (btn.getAttribute('data-gallery-category') === category) {
            btn.classList.add('bg-premier-purple', 'text-white');
            btn.classList.remove('bg-gray-100', 'text-gray-600', 'hover:bg-gray-200');
          } else {
            btn.classList.remove('bg-premier-purple', 'text-white');
            btn.classList.add('bg-gray-100', 'text-gray-600', 'hover:bg-gray-200');
          }
        });
        
        // Filter gallery images by category
        const galleryImages = document.querySelectorAll('[data-gallery-category]');
        galleryImages.forEach(image => {
          // Skip if element is a button (they also have the data-gallery-category attribute)
          if (image.tagName.toLowerCase() === 'button') return;
          
          const imageCategory = image.getAttribute('data-gallery-category');
          if (!category || imageCategory === category) {
            (image as HTMLElement).style.display = 'block';
          } else {
            (image as HTMLElement).style.display = 'none';
          }
        });
      });
    });
  });
</script> 